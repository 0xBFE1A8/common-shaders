#include "../../../compat_macros.inc"
#include "../../../compat_input_struct.inc"

void main_vertex
(
	float4 position : COMPAT_POS,
	float4 color    : COLOR,
	float2 texCoord : TEXCOORD0,

   uniform float4x4 modelViewProj,

	out float4 oPosition : COMPAT_POS,
	out float2 otexCoord : TEXCOORD
)
{
	oPosition = mul(modelViewProj, position);
	otexCoord = texCoord;
}

#include "blur_params.inc"

#define kernel(x) exp(-GLOW_FALLOFF * (x) * (x))

float4 blur_horiz(float2 tex, COMPAT_Texture2D(s0), float2 texture_size)
{
   float3 col = float3(0.0, 0.0, 0.0);
   float dx = 1.0 / texture_size.x;

   float k_total = 0.0;
   for (int i = -TAPS; i <= TAPS; i++)
   {
      float k = kernel(i);
      k_total += k;
      col += k * COMPAT_SamplePoint(s0, tex + float2(float(i) * dx, 0.0)).rgb;
   }
   return float4(col / k_total, 1.0);
}

float4 main_fragment(float2 texCoord : TEXCOORD0, uniform COMPAT_Texture2D(decal) : TEXUNIT0, uniform input IN) : COMPAT_Output
{
	return blur_horiz(texCoord, decal, COMPAT_texture_size);
}